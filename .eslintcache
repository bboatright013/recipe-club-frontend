[{"/Users/brandonboatright/Desktop/CAPSTONE2/frontend/src/index.js":"1","/Users/brandonboatright/Desktop/CAPSTONE2/frontend/src/reportWebVitals.js":"2","/Users/brandonboatright/Desktop/CAPSTONE2/frontend/src/App.js":"3","/Users/brandonboatright/Desktop/CAPSTONE2/frontend/src/reducers/rootReducer.js":"4","/Users/brandonboatright/Desktop/CAPSTONE2/frontend/src/actions/actionTypes.js":"5","/Users/brandonboatright/Desktop/CAPSTONE2/frontend/src/components/RecipeListing.js":"6","/Users/brandonboatright/Desktop/CAPSTONE2/frontend/src/actionCreators/recipeList.js":"7","/Users/brandonboatright/Desktop/CAPSTONE2/frontend/src/actionCreators/tagsAndUsers.js":"8","/Users/brandonboatright/Desktop/CAPSTONE2/frontend/src/components/NavBar.js":"9","/Users/brandonboatright/Desktop/CAPSTONE2/frontend/src/components/Routes.js":"10","/Users/brandonboatright/Desktop/CAPSTONE2/frontend/src/components/UserActions/UserRecipes.js":"11","/Users/brandonboatright/Desktop/CAPSTONE2/frontend/src/components/UserActions/Cookbook.js":"12","/Users/brandonboatright/Desktop/CAPSTONE2/frontend/src/components/UserAuth/Login.js":"13","/Users/brandonboatright/Desktop/CAPSTONE2/frontend/src/components/UserAuth/Register.js":"14","/Users/brandonboatright/Desktop/CAPSTONE2/frontend/src/components/UserActions/CookbookRecipes.js":"15","/Users/brandonboatright/Desktop/CAPSTONE2/frontend/src/components/UserActions/Profile.js":"16","/Users/brandonboatright/Desktop/CAPSTONE2/frontend/src/components/UserActions/NewRecipe.js":"17","/Users/brandonboatright/Desktop/CAPSTONE2/frontend/src/components/UserActions/RecipeForm.js":"18","/Users/brandonboatright/Desktop/CAPSTONE2/frontend/src/actionCreators/profile.js":"19","/Users/brandonboatright/Desktop/CAPSTONE2/frontend/src/customHooks/useFields.js":"20","/Users/brandonboatright/Desktop/CAPSTONE2/frontend/src/helpers/recipeFormHelpers.js":"21","/Users/brandonboatright/Desktop/CAPSTONE2/frontend/src/components/RecipeCard.js":"22","/Users/brandonboatright/Desktop/CAPSTONE2/frontend/src/components/adminActions/TagForm.js":"23","/Users/brandonboatright/Desktop/CAPSTONE2/frontend/src/actionCreators/recipeDetails.js":"24","/Users/brandonboatright/Desktop/CAPSTONE2/frontend/src/actionCreators/userRatings.js":"25","/Users/brandonboatright/Desktop/CAPSTONE2/frontend/src/components/recipeDetails/RecipeDetails.js":"26","/Users/brandonboatright/Desktop/CAPSTONE2/frontend/src/components/recipeDetails/RecipeDetailsInstruction.js":"27","/Users/brandonboatright/Desktop/CAPSTONE2/frontend/src/components/recipeDetails/RecipeDetailsIngredient.js":"28","/Users/brandonboatright/Desktop/CAPSTONE2/frontend/src/components/recipeDetails/RecipeDetailsRating.js":"29","/Users/brandonboatright/Desktop/CAPSTONE2/frontend/src/actionCreators/comments.js":"30","/Users/brandonboatright/Desktop/CAPSTONE2/frontend/src/components/recipeDetails/RecipeDetailsComments.js":"31","/Users/brandonboatright/Desktop/CAPSTONE2/frontend/src/components/recipeDetails/RecipeDetailsCommentsForm.js":"32","/Users/brandonboatright/Desktop/CAPSTONE2/frontend/src/actionCreators/usersCookbook.js":"33","/Users/brandonboatright/Desktop/CAPSTONE2/frontend/src/components/UserActions/CookbookCard.js":"34","/Users/brandonboatright/Desktop/CAPSTONE2/frontend/src/components/UserActions/EditRecipe.js":"35"},{"size":1113,"mtime":1611592130330,"results":"36","hashOfConfig":"37"},{"size":362,"mtime":1609952164422,"results":"38","hashOfConfig":"37"},{"size":1202,"mtime":1611525211930,"results":"39","hashOfConfig":"37"},{"size":8106,"mtime":1611538195708,"results":"40","hashOfConfig":"37"},{"size":1853,"mtime":1610991825473,"results":"41","hashOfConfig":"37"},{"size":2727,"mtime":1611536976045,"results":"42","hashOfConfig":"37"},{"size":2286,"mtime":1610642754462,"results":"43","hashOfConfig":"37"},{"size":1397,"mtime":1611537229809,"results":"44","hashOfConfig":"37"},{"size":2919,"mtime":1611524919475,"results":"45","hashOfConfig":"37"},{"size":1887,"mtime":1611014217329,"results":"46","hashOfConfig":"37"},{"size":1308,"mtime":1611239808627,"results":"47","hashOfConfig":"37"},{"size":1044,"mtime":1611366782594,"results":"48","hashOfConfig":"37"},{"size":1881,"mtime":1611525546617,"results":"49","hashOfConfig":"37"},{"size":2296,"mtime":1611525513418,"results":"50","hashOfConfig":"37"},{"size":3239,"mtime":1611524731403,"results":"51","hashOfConfig":"37"},{"size":125,"mtime":1610391885739,"results":"52","hashOfConfig":"37"},{"size":198,"mtime":1611254651349,"results":"53","hashOfConfig":"37"},{"size":5501,"mtime":1611525720564,"results":"54","hashOfConfig":"37"},{"size":2601,"mtime":1610991941911,"results":"55","hashOfConfig":"37"},{"size":374,"mtime":1610397987118,"results":"56","hashOfConfig":"37"},{"size":554,"mtime":1610474994048,"results":"57","hashOfConfig":"37"},{"size":1138,"mtime":1611523007331,"results":"58","hashOfConfig":"37"},{"size":1188,"mtime":1611538666106,"results":"59","hashOfConfig":"37"},{"size":2187,"mtime":1611329191688,"results":"60","hashOfConfig":"37"},{"size":1741,"mtime":1610861980082,"results":"61","hashOfConfig":"37"},{"size":5461,"mtime":1611517140774,"results":"62","hashOfConfig":"37"},{"size":364,"mtime":1610727155240,"results":"63","hashOfConfig":"37"},{"size":356,"mtime":1611413803898,"results":"64","hashOfConfig":"37"},{"size":2615,"mtime":1610923801789,"results":"65","hashOfConfig":"37"},{"size":1649,"mtime":1611178756901,"results":"66","hashOfConfig":"37"},{"size":1241,"mtime":1611274348454,"results":"67","hashOfConfig":"37"},{"size":1382,"mtime":1611517077183,"results":"68","hashOfConfig":"37"},{"size":1236,"mtime":1611186397915,"results":"69","hashOfConfig":"37"},{"size":764,"mtime":1611238562514,"results":"70","hashOfConfig":"37"},{"size":7661,"mtime":1611536856784,"results":"71","hashOfConfig":"37"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},"1snfcod",{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"74"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"74"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"74"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"74"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"74"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"74"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"74"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"74"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"74"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"74"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"74"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"74"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"74"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"74"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"74"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"74"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"74"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"74"},"/Users/brandonboatright/Desktop/CAPSTONE2/frontend/src/index.js",[],["162","163"],"/Users/brandonboatright/Desktop/CAPSTONE2/frontend/src/reportWebVitals.js",[],"/Users/brandonboatright/Desktop/CAPSTONE2/frontend/src/App.js",["164","165"],"import React, {useEffect} from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport './App.css';\nimport Routes from './components/Routes';\nimport NavBar from \"./components/NavBar\";\nimport { getUser, addUserToken } from \"./actionCreators/profile\";\nimport { getTags } from './actionCreators/tagsAndUsers';\nimport { getRecipeTags } from './actionCreators/recipeList';\nimport { getRatings } from './actionCreators/userRatings';\nimport { getUsersCookbook } from './actionCreators/usersCookbook';\n\nfunction App() {\n\n  const dispatch = useDispatch();\n  const token = localStorage.getItem(\"token\");\n  const username = localStorage.getItem(\"username\");\n\n  useEffect(() => {\n    async function checkIsLoggedIn() {\n\n      if(token && username){\n        console.log(username, {user : { token: token}})\n        dispatch(getUser(username, {user : { token: token}}))\n        dispatch(addUserToken(token));\n      }\n    }\n\n    checkIsLoggedIn();\n    dispatch(getRatings(username));\n    dispatch(getUsersCookbook(username));\n    dispatch(getTags());\n    dispatch(getRecipeTags());\n\n\n  }, [])\n\n  return (\n    <div className=\"App\">\n     <NavBar />\n     <Routes />\n    </div>\n  );\n}\n\nexport default App;\n","/Users/brandonboatright/Desktop/CAPSTONE2/frontend/src/reducers/rootReducer.js",[],"/Users/brandonboatright/Desktop/CAPSTONE2/frontend/src/actions/actionTypes.js",[],"/Users/brandonboatright/Desktop/CAPSTONE2/frontend/src/components/RecipeListing.js",["166","167","168"],"import React, {useEffect, useState} from 'react';\nimport {useSelector, useDispatch} from 'react-redux';\nimport { getRecipes, getRecipeTags } from \"../actionCreators/recipeList\"\nimport RecipeCard from './RecipeCard';\nimport { getFilteredRecipes } from '../actionCreators/recipeList'\nimport {CardColumns} from 'reactstrap';\nimport { Col, Row, Button, Form, FormGroup, Label, Input } from 'reactstrap';\nimport { getTags } from '../actionCreators/tagsAndUsers';\n\nconst RecipeListing = () => {\n    const dispatch = useDispatch();\n    const { recipes, tags } = useSelector(store => store);\n\n    const [filterBy, setFilterBy] = useState({ \"tag_name\" : \"\"});\n    const handleFilterChange = evt => {\n        setFilterBy(filterBy => ({\n            \"tag_name\": evt.target.value\n        }));\n    }\n\n    const handleFilter = evt => {\n        evt.preventDefault();\n        dispatch(getFilteredRecipes(filterBy));\n    }\n    const handleReset = evt => {\n        evt.preventDefault();\n        dispatch(getRecipes());\n        document.getElementById(\"tagSelector\").reset();\n        setFilterBy(filterBy => ({\n            \"tag_name\": \"\"\n        }));\n    }\n    \n    useEffect(() => {\n            dispatch(getRecipes());\n            dispatch(getRecipeTags());\n            dispatch(getTags());\n    }, [dispatch] )\n\n\n    return (\n        <div className=\"Recipe-Listing\">\n            <div className=\"FilterSection\">\n                <Form id=\"tagSelector\">\n                    <FormGroup>\n                    <Input type=\"select\" id=\"tags\" name=\"tags\" onChange={handleFilterChange}>\n                        <option> Select...</option>\n                        {tags.map( tag => (<option key={tag.id} value={tag.tag_name}>{tag.tag_name}</option>))}\n                    </Input>\n                    <Button color=\"info\" onClick={handleFilter} type=\"button\">Filter!</Button>\n                    <Button color=\"info\" onClick={handleReset} type=\"button\">Reset</Button>\n                    </FormGroup>\n                </Form>\n            </div>\n            <CardColumns>\n            { recipes.map(recipe => { \n                return (\n                    <RecipeCard\n                        key={recipe.id}\n                        id={recipe.id}\n                        recipe_name={recipe.recipe_name}\n                        image_url={recipe.image_url}\n                        created_on={recipe.created_on} \n                        user_username={recipe.user_username}\n                        num_comments={recipe.num_comments}\n                        rating={recipe.rating}\n                        cookbook_adds={recipe.cookbook_adds}/>\n                )\n            })}\n            </CardColumns>\n\n        </div>\n    )\n}\n\nexport default RecipeListing;\n","/Users/brandonboatright/Desktop/CAPSTONE2/frontend/src/actionCreators/recipeList.js",[],"/Users/brandonboatright/Desktop/CAPSTONE2/frontend/src/actionCreators/tagsAndUsers.js",[],"/Users/brandonboatright/Desktop/CAPSTONE2/frontend/src/components/NavBar.js",["169","170","171","172","173","174","175","176","177","178","179"],"import React, {useEffect, useState} from 'react';\nimport {useSelector, useDispatch} from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport {logoutUser} from '../actionCreators/profile';\nimport {useHistory} from 'react-router-dom';\nimport { Collapse, Navbar, NavbarToggler, NavbarBrand,Nav,NavItem, NavLink, Dropdown,\n     UncontrolledDropdown, DropdownToggle, DropdownMenu, DropdownItem, NavbarText, Button } from 'reactstrap';\nimport { CgProfile } from 'react-icons/cg';\nimport { BsPeopleCircle } from \"react-icons/bs\";\n\nconst NavBar = () => {\n    const history = useHistory();\n    const dispatch = useDispatch();\n    const { user, isLoggedIn } = useSelector(store => store);\n    const handleLogout = evt => {\n        evt.preventDefault();\n        localStorage.removeItem(\"token\");\n        localStorage.removeItem(\"username\");\n        dispatch(logoutUser());\n        history.push(\"/\");\n    }\n    const [dropdownOpen, setDropdownOpen] = useState(false);\n\n    const toggle = () => setDropdownOpen(prevState => !prevState);\n  \n\n    return (\n        \n        <Navbar className=\"NavBar\">\n            { isLoggedIn ? \n            <div>\n            <div>\n                <Dropdown isOpen={dropdownOpen} toggle={toggle}>\n                    <DropdownToggle caret outline color=\"primary\"><BsPeopleCircle size={20} /> Menu</DropdownToggle>\n                    <DropdownMenu>\n                    <Link to={`/new`}><DropdownItem> New Recipe </DropdownItem></Link>\n                        <Link to={`/${user.username}/recipes`}><DropdownItem>Your Recipes</DropdownItem></Link> \n                        <Link to={`/${user.username}/cookbook`}><DropdownItem>Your Cookbook</DropdownItem></Link>\n                        <Link to={`/${user.username}/profile`}><DropdownItem>Your Profile</DropdownItem></Link> \n                        { user.is_admin \n                        ?\n                        <Link to={\"/tags/new\"}><DropdownItem> Add Category</DropdownItem></Link>\n                        :\n                        <> </> }\n                        <DropdownItem onClick={handleLogout}>Logout </DropdownItem>\n                    </DropdownMenu>\n                </Dropdown>\n            </div>\n            </div>\n            :      \n            <>\n            <div> \n            <Dropdown isOpen={dropdownOpen} toggle={toggle}>\n                    <DropdownToggle caret outline color=\"primary\"><BsPeopleCircle size={20} /> Menu</DropdownToggle>\n                    <DropdownMenu>\n                    <Link to=\"/login\"><DropdownItem> Login</DropdownItem></Link>\n                    <Link to=\"/register\"><DropdownItem>Register</DropdownItem></Link>\n                    </DropdownMenu>\n            </Dropdown>\n            </div>\n            </>\n                    }\n                                <span className=\"Logo\"><Link to=\"/\">Recipe Club</Link></span>\n        </Navbar>\n        \n    )\n\n\n}\n\nexport default NavBar;","/Users/brandonboatright/Desktop/CAPSTONE2/frontend/src/components/Routes.js",[],"/Users/brandonboatright/Desktop/CAPSTONE2/frontend/src/components/UserActions/UserRecipes.js",["180","181","182","183"],"import React, {useState, useEffect} from 'react';\nimport {useSelector, useDispatch} from 'react-redux';\nimport RecipeCard from '../RecipeCard';\nimport {getRecipes} from '../../actionCreators/recipeList';\nimport {CardColumns} from 'reactstrap';\n\nconst UserRecipes = () => {\n    const dispatch = useDispatch();\n    const { recipes, tags, user } = useSelector(store => store);\n    let user_recipes = recipes.filter( recipe => recipe.user_username == user.username);\n\n    useEffect(() => {\n        dispatch(getRecipes())\n    }, [])\n\n    return (\n        recipes ?\n        <CardColumns className=\"Users-Recipe-Listing\">\n            { user_recipes.map(recipe => { \n                return (\n                    <RecipeCard\n                        key={recipe.id}\n                        id={recipe.id}\n                        recipe_name={recipe.recipe_name}\n                        image_url={recipe.image_url}\n                        created_on={recipe.created_on} \n                        user_username={recipe.user_username}\n                        num_comments={recipe.num_comments}\n                        rating={recipe.rating}\n                        cookbook_adds={recipe.cookbook_adds}/>\n                )\n            })}\n        </CardColumns>\n        :\n        <></>\n    )\n}\n\nexport default UserRecipes;","/Users/brandonboatright/Desktop/CAPSTONE2/frontend/src/components/UserActions/Cookbook.js",["184","185"],"import React, {useEffect} from 'react';\nimport {useDispatch, useSelector} from 'react-redux';\nimport { getUsersCookbook } from '../../actionCreators/usersCookbook';\nimport CookbookCard from './CookbookCard';\nimport { CardColumns } from 'reactstrap';\n\n\nconst Cookbook = () => {\n    const { token, cookbook, user } = useSelector(store => store);\n    const dispatch = useDispatch();\n    const username = localStorage.getItem(\"username\");\n    useEffect(()=>{\n        dispatch(getUsersCookbook(username));\n    }, []);\n\n    return (\n        <CardColumns>\n        {cookbook.length > 0 \n        ? cookbook.map(recipe => (\n            <CookbookCard \n            key={user.username + \":\" + recipe.id}\n            username = {user.username}\n            id={recipe.id} \n            recipe_name={recipe.recipe_name} \n            image_url={recipe.image_url} \n            created_on={recipe.created_on} \n            user_username={recipe.user_username} />\n        ))\n        :\n        <></>\n        }\n\n        </CardColumns>\n    )\n}\n\nexport default Cookbook;","/Users/brandonboatright/Desktop/CAPSTONE2/frontend/src/components/UserAuth/Login.js",["186","187","188","189","190"],"import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {useHistory} from 'react-router-dom';\nimport useFields from '../../customHooks/useFields';\nimport {login} from \"../../actionCreators/profile\";\nimport { Col, Row, Button, Form, FormGroup, Label, Input } from 'reactstrap';\n\nconst Login = () => {\n    const dispatch = useDispatch();\n    const history = useHistory();\n    const { token, username, admin } = useSelector(store => store.user);\n    const loginFields = { \n        \"username\" : \"\",\n        \"password\" : \"\"\n    }\n\n    const [ data, handleChange ] = useFields(loginFields);\n\n    const handleLogin = evt => {\n        evt.preventDefault();\n        dispatch(login(data));\n        history.push(\"/\");\n    }\n\n\n\n\n    return (\n            <div>\n            <Form className=\"Form\">\n                <FormGroup className=\"Login-Form-group\">\n                <Label htmlFor=\"username\">Username: </Label>\n                    <Input\n                        name=\"username\"\n                        type=\"text\"\n                        id=\"username\"\n                        value={data.value}\n                        onChange={handleChange}\n                        />\n                </FormGroup>\n                <FormGroup className=\"Login-Form-group\">\n                <Label htmlFor=\"password\">Password: </Label>\n                    <Input\n                        name=\"password\"\n                        type=\"text\"\n                        id=\"password\"\n                        value={data.value}\n                        onChange={handleChange}\n                        />\n                </FormGroup>\n                <FormGroup className=\"Login-Form-group\">\n                    <Button color=\"primary\" onClick={handleLogin} >Login</Button>\n                </FormGroup>         \n            </Form>\n        </div>\n        )\n}\n\nexport default Login;\n\n\n\n\n","/Users/brandonboatright/Desktop/CAPSTONE2/frontend/src/components/UserAuth/Register.js",["191","192","193","194","195"],"import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {useHistory} from 'react-router-dom';\nimport useFields from '../../customHooks/useFields';\nimport {register} from \"../../actionCreators/profile\";\nimport { Col, Row, Button, Form, FormGroup, Label, Input } from 'reactstrap';\n\nconst Register = () => {\n    const dispatch = useDispatch();\n    const history = useHistory();\n    const { token, username, admin } = useSelector(store => store.user);\n    const registerFields = { \n        \"username\" : \"\",\n        \"password\" : \"\",\n        \"email\" : \"\"\n    }\n\n    const [ data, handleChange ] = useFields(registerFields);\n\n    const handleRegister = evt => {\n        evt.preventDefault();\n        dispatch(register(data));\n        history.push(\"/\");\n    }\n\n\n\n\n    return (\n            <div>\n            <Form className=\"Form\">\n                <FormGroup className=\"Form-group\">\n                <Label htmlFor=\"username\">Username: </Label>\n                    <Input\n                        name=\"username\"\n                        type=\"text\"\n                        id=\"username\"\n                        value={data.value}\n                        onChange={handleChange}\n                        />\n                </FormGroup>\n                <FormGroup className=\"Form-group\">\n                <Label htmlFor=\"password\">password: </Label>\n                    <Input\n                        name=\"password\"\n                        type=\"text\"\n                        id=\"password\"\n                        value={data.value}\n                        onChange={handleChange}\n                        />\n                </FormGroup>\n                <FormGroup className=\"Form-group\">\n                <Label htmlFor=\"email\">email: </Label>\n                    <Input\n                        name=\"email\"\n                        type=\"text\"\n                        id=\"email\"\n                        value={data.value}\n                        onChange={handleChange}\n                        />\n                </FormGroup>\n                <FormGroup className=\"Form-group\">\n                    <Button color=\"primary\" onClick={handleRegister} >Register</Button>\n                </FormGroup>         \n            </Form>\n        </div>\n        )\n}\n\nexport default Register;\n","/Users/brandonboatright/Desktop/CAPSTONE2/frontend/src/components/UserActions/CookbookRecipes.js",["196","197","198","199","200","201","202","203","204","205","206"],"import React, {useEffect, useState} from 'react';\nimport RecipeDetailsInstruction from '../recipeDetails/RecipeDetailsInstruction';\nimport RecipeDetailsIngredient from '../recipeDetails/RecipeDetailsIngredient';\nimport { useParams, useHistory } from 'react-router-dom';\nimport {useDispatch, useSelector} from 'react-redux';\nimport { getRecipe, dismountRecipe } from '../../actionCreators/recipeDetails';\nimport { deleteFromCookbook } from '../../actionCreators/usersCookbook';\nimport { TabContent, TabPane, Nav, NavItem, NavLink, Card, Button, CardTitle, CardText, Row, Col, Form, FormGroup, Label, Input, Container } from 'reactstrap';\nimport classnames from 'classnames';\n\n\nconst CookbookRecipes = () => {\n    const { id } = useParams();\n    const dispatch = useDispatch();\n    const history = useHistory();\n    const {recipe, isLoggedIn, user, token } = useSelector(store => store);\n    \n    const handleDelete = evt => {\n        dispatch(deleteFromCookbook(id, token));\n        history.push(`/${user.username}/cookbook`);\n    }\n    useEffect(() => {\n        console.log(id);\n        dispatch(getRecipe(id));\n        return dispatch(dismountRecipe());\n    }, [])\n\n    const [activeTab, setActiveTab] = useState('1');\n  \n    const tabToggle = tab => {\n      if(activeTab !== tab) setActiveTab(tab);\n    }\n    \n    return (\n        recipe.instructions && recipe.ingredients ?\n        <div className=\"Recipe-Details\">\n\n        <Row>\n            <Col md=\"6\">\n            <h3>{recipe.recipe_name}</h3>\n            <div>\n                <img className=\"Hero-Image\" src={recipe.image_url}/>\n            </div>  \n            </Col>\n            <Col md=\"6\">\n            <Nav tabs>\n                <NavItem>\n                    <NavLink className={classnames({ active: activeTab === '1' })} onClick={() => { tabToggle('1'); }}>Instructions  </NavLink>\n                </NavItem>\n                <NavItem>\n                    <NavLink className={classnames({ active: activeTab === '2' })} onClick={() => { tabToggle('2'); }}>Ingredients  </NavLink>\n                </NavItem>\n            </Nav>\n            <TabContent activeTab={activeTab}>\n                <TabPane tabId=\"1\">\n                    <div className=\"Detail-Instructions\">\n                        {recipe.instructions.map(instruction =>\n                        <RecipeDetailsInstruction key={instruction.instruction + \"instruction\" + id} id={instruction.id} order_num={instruction.order_num} instruction={instruction.instruction} /> \n                        )}\n                    </div>\n                </TabPane>\n                <TabPane tabId=\"2\">\n                    <div className=\"Detail-Ingredients\">\n                        {recipe.ingredients.map(ingredient => \n                        <RecipeDetailsIngredient key={ingredient.ingredient + \"ingredient\" + id} id={ingredient.id} order_num={ingredient.order_num} ingredient={ingredient.ingredient} />\n                    )}\n                    </div>\n                </TabPane>\n            </TabContent>\n            </Col>\n        </Row>\n          \n\n\n                <Button color=\"danger\" onClick={handleDelete}>Remove</Button>\n        </div>\n        \n        :\n        <>...loading</>\n    )\n}\n\nexport default CookbookRecipes;","/Users/brandonboatright/Desktop/CAPSTONE2/frontend/src/components/UserActions/Profile.js",[],"/Users/brandonboatright/Desktop/CAPSTONE2/frontend/src/components/UserActions/NewRecipe.js",[],"/Users/brandonboatright/Desktop/CAPSTONE2/frontend/src/components/UserActions/RecipeForm.js",["207"],"import React, {useState, useEffect} from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {useHistory} from 'react-router-dom';\nimport useFields from '../../customHooks/useFields';\nimport {addRecipe} from \"../../actionCreators/recipeList\";\nimport { transformIngredients, transformInstructions} from \"../../helpers/recipeFormHelpers\";\nimport { Col, Row, Button, Form, FormGroup, Label, Input } from 'reactstrap';\nimport { RiDeleteBack2Fill } from \"react-icons/ri\";\n\n\n\n\nconst RecipeForm = () => {\n    const dispatch = useDispatch();\n    const history = useHistory();\n    const { user, tags, token } = useSelector(store => store);\n\n    const recipeFields = { \n        \"name\" : \"\",\n        \"image_url\" : \"\"\n    }\n    const textBoxField = {\n        \"info\" : \"\"\n    }\n    const[ textboxState, setTextBoxState ] = useState(textBoxField);\n    const handleChangeTextBox = event => {\n        setTextBoxState(textboxState => ({\n            ...textboxState,\n            [event.target.name] : event.target.value\n        }));\n    }\n    const [ data, handleChange ] = useFields(recipeFields);\n    const [ ingredientsState, setIngredients ] = useState([]);\n    const [ instructionsState, setInstructions ] = useState([]);\n\n    const [recipeTags, setRecipeTags] = useState([]);\n    const handleCheckBoxChange = evt => {\n        console.log(evt.target.checked);\n        if(evt.target.checked){\n            setRecipeTags(recipeTags => ([\n                ...recipeTags,\n                evt.target.value\n            ]));\n        } else {\n            setRecipeTags(recipeTags.filter( recipe => recipe !== evt.target.value ));\n        }\n}\n\n    const handleAddRecipe = evt => {\n        evt.preventDefault();\n        let instructions = transformInstructions(instructionsState);\n        let ingredients = transformIngredients(ingredientsState);\n        let recipe = {\n            user,\n            token,\n            \"recipe_name\" : data.name,\n            \"image_url\" : data.image_url,\n            \"ingredientsArray\" : ingredients,\n            \"instructionsArray\" : instructions,\n            recipeTags\n        }\n        dispatch(addRecipe(recipe));\n        history.push(`/`);\n    }\n    const handleAddIngredient = evt => {\n        evt.preventDefault();\n        setIngredients([...ingredientsState, textboxState.info]);\n        setTextBoxState(textBoxField);\n        document.getElementById(\"info\").value = \"\";\n    }\n    const removeIngredient = evt => {\n        console.log(evt);\n        let filteredArray = ingredientsState.filter(item => item !== evt.target.parentElement.parentElement.id);\n        setIngredients(filteredArray);\n    }\n    const handleAddInstruction = evt => {\n        evt.preventDefault();\n        setInstructions([...instructionsState, textboxState.info]);\n        setTextBoxState(textBoxField);\n        document.getElementById(\"info\").value = \"\";\n    }\n    const removeInstruction = evt => {\n        let filteredArray = instructionsState.filter(item => item !== evt.target.parentElement.parentElement.id);\n        setInstructions(filteredArray);\n    }\n\n    return (\n        <Form className=\"PostForm\">\n            <Row form>\n                <Col md={6}>\n            <FormGroup>\n                <Label htmlFor=\"name\">Name</Label>\n                <Input type=\"text\" name=\"name\" id=\"name\" placeholder=\"Recipe Name\" onChange={handleChange} />\n            </FormGroup>\n            <FormGroup>\n                <Label htmlFor=\"imageURL\">Image URL</Label>\n                <Input type=\"text\" name=\"image_url\" id=\"image_url\" placeholder=\"URL to a picture of your recipe\" onChange={handleChange} />\n            </FormGroup>\n            <FormGroup>\n                {tags.map( tag => (<>\n                   <Label htmlFor={tag.id} check> \n                   <Input onChange={handleCheckBoxChange} type=\"checkbox\" key={tag.id} id={tag.id} name={tag.id} value={tag.id} />{' '}\n                    {tag.tag_name}\n                   </Label>\n                   </>\n                ))}\n            </FormGroup>\n            </Col>\n            <Col md={6}>\n                    <FormGroup>\n                        <Label htmlFor=\"info\">Add Ingredient/Instruction:\n                        <Input type=\"textarea\"  name=\"info\" id=\"info\" onChange={handleChangeTextBox}/></Label>\n                        <div>\n                        <Button outline color=\"success\" type=\"button\" onClick={handleAddIngredient}>Add Ingredient</Button>\n                        <Button outline color=\"success\" type=\"button\" onClick={handleAddInstruction}>Add Instruction</Button>\n                        </div>\n                    </FormGroup>\n                </Col>\n            </Row>\n            <Row form>\n\n                <Col md={6}>\n                <h4>Ingredients</h4>\n                <ol>\n                    {ingredientsState.map(ingredient => <li id={ingredient} key={ingredient} >{ingredient}  <span onClick={removeIngredient}><RiDeleteBack2Fill color=\"#dc3545\" /></span></li>)}\n                </ol>\n                </Col>\n                <Col md={6}>\n                 <h4>Instructions</h4>\n                <ol>\n                    {instructionsState.map(instruction => <li id={instruction} key={instruction}> {instruction}  <span onClick={removeInstruction}><RiDeleteBack2Fill color=\"#dc3545\" /></span></li>)}\n                </ol>\n                </Col>\n                <Button color=\"primary\" onClick={handleAddRecipe}>Submit Recipe</Button>\n            </Row>\n        </Form>\n    )\n}\n\nexport default RecipeForm;","/Users/brandonboatright/Desktop/CAPSTONE2/frontend/src/actionCreators/profile.js",[],"/Users/brandonboatright/Desktop/CAPSTONE2/frontend/src/customHooks/useFields.js",["208"],"import React, {useState} from 'react';\n\nconst useFields = (initialState) => {\n    const[ formData, setFormData ] = useState(initialState);\n\n    const handleChange = event => {\n        setFormData(formData => ({\n            ...formData,\n            [event.target.name] : event.target.value\n        }));\n    }\n    return ([formData, handleChange])\n}\n\nexport default useFields;","/Users/brandonboatright/Desktop/CAPSTONE2/frontend/src/helpers/recipeFormHelpers.js",[],["209","210"],"/Users/brandonboatright/Desktop/CAPSTONE2/frontend/src/components/RecipeCard.js",["211","212"],"import React from 'react';\nimport { Link } from 'react-router-dom';\nimport {\n    Card, CardImg, CardText, CardBody,\n    CardTitle, CardSubtitle, Button, Badge\n  } from 'reactstrap';\n\n\nconst RecipeCard = ({id, recipe_name, image_url, created_on, user_username, num_comments, rating, cookbook_adds}) => {\n\n\n\nreturn (\n    <Card data-id={id} className=\"RecipeCard\">\n        <Link to={`/recipes/${id}`}>\n            <CardImg top width=\"100%\" src={image_url} alt={`image of ${recipe_name}`}/>\n        </Link>\n        <CardBody>\n        <CardTitle tag=\"h5\" className=\"CardName\">{recipe_name}</CardTitle>\n        <Badge outline color=\"primary\" className=\"CardRating\">User Rating: {Math.trunc(rating)}</Badge>\n        <Badge outline color=\"primary\" className=\"CardCookbooks\">Cookbook Adds: {cookbook_adds}</Badge>\n        <Badge outline color=\"primary\" className=\"CardComments\">Comments: {num_comments}</Badge>\n        <CardSubtitle tag=\"h6\" className=\"CardCreatedOn\">{created_on}</CardSubtitle>\n        <CardSubtitle tag=\"h6\" className=\"CardUsername\">{user_username}</CardSubtitle>\n        </CardBody>\n    </Card>\n)\n\n}\n\nexport default RecipeCard;","/Users/brandonboatright/Desktop/CAPSTONE2/frontend/src/components/adminActions/TagForm.js",["213"],"import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {useHistory} from 'react-router-dom';\nimport useFields from '../../customHooks/useFields';\nimport { addTag } from '../../actionCreators/tagsAndUsers';\nimport { Button, Form, Label, Input } from 'reactstrap';\n\nconst TagForm = () => {\n    const dispatch = useDispatch();\n    const history = useHistory();\n    const { user, token } = useSelector(store => store);\n\n    const tagFields = {\n        \"tag_name\" : \"\"\n    }\n    const [tagState, handleTagChange] = useFields(tagFields);\n\n    const handleAddTag = evt => {\n        evt.preventDefault();\n        console.log({tagState, token});\n        dispatch(addTag({ tag_name: tagState.tag_name, token :token}));\n        history.push(\"/\");\n    }\n    return (\n        <Form className=\"TagForm\">\n            <h3>Add a Category</h3>\n            <div>\n                <Label htmlFor=\"tag_name\">Name: </Label>\n                <Input type=\"text\" name=\"tag_name\" id=\"tag_name\" onChange={handleTagChange} />\n            </div>\n            <Button color=\"success\" onClick={handleAddTag} type=\"submit\">Add Tag</Button>\n        </Form>\n    )\n}\n\nexport default TagForm;","/Users/brandonboatright/Desktop/CAPSTONE2/frontend/src/actionCreators/recipeDetails.js",[],"/Users/brandonboatright/Desktop/CAPSTONE2/frontend/src/actionCreators/userRatings.js",[],"/Users/brandonboatright/Desktop/CAPSTONE2/frontend/src/components/recipeDetails/RecipeDetails.js",["214","215","216","217","218","219","220","221","222","223","224","225","226","227"],"import React, {useEffect, useState} from 'react';\nimport { useParams, Link, useHistory } from 'react-router-dom';\nimport {useDispatch, useSelector} from 'react-redux';\nimport { getRecipe, dismountRecipe, deleteRecipe } from '../../actionCreators/recipeDetails'\nimport { getRatings } from '../../actionCreators/userRatings';\nimport {getRecipeComments} from '../../actionCreators/comments';\nimport { addToCookbook } from '../../actionCreators/usersCookbook';\nimport RecipeDetailsInstruction from './RecipeDetailsInstruction';\nimport RecipeDetailsIngredient from './RecipeDetailsIngredient';\nimport RecipeDetailsRating from './RecipeDetailsRating';\nimport RecipeDetailsComments from './RecipeDetailsComments';\nimport RecipeDetailsCommentsForm from './RecipeDetailsCommentsForm';\nimport { TabContent, TabPane, Nav, NavItem, NavLink, Card, Button, CardTitle, CardText, Row, Col, Form, FormGroup, Label, Input, Container } from 'reactstrap';\nimport classnames from 'classnames';\n\n\nconst RecipeDetails = () => {\nconst { id } = useParams();\nconst dispatch = useDispatch();\nconst {recipe, isLoggedIn, user, token} = useSelector(store => store);\nconst history = useHistory();\n\nconst handleDelete = evt => {\n    evt.preventDefault();\n    dispatch(deleteRecipe(id, {token}));\n    history.push('/');\n}\n\nconst handleAddToCookbook = evt => {\n    evt.preventDefault();\n    dispatch(addToCookbook(id, {token}));\n}\n\nconst [recipeTags, setRecipeTags] = useState([]);\n\nuseEffect(() => {\n    dispatch(getRecipe(id));\n    dispatch(getRecipeComments(id));\n    if(isLoggedIn){\n        dispatch(getRatings(user.username));\n    }\n    return dispatch(dismountRecipe());\n}, [])\n\n    const [activeTab, setActiveTab] = useState('1');\n  \n    const tabToggle = tab => {\n      if(activeTab !== tab) setActiveTab(tab);\n    }\n\n\n\n    return (\n        (recipe.instructions || recipe.ingredients) && recipe.recipe_tags ?\n        \n        <div className=\"Recipe-Details\">\n            <h3>{recipe.recipe_name}</h3>\n            <Row>\n            <Col md=\"6\">\n            <div className=\"Hero-Image-Container\">\n                <img className=\"Hero-Image\" src={recipe.image_url}/>\n                <div className=\"Recipe-Details-Postedby\"><i>Posted by: {recipe.user_username}</i></div>\n                { (recipe.recipe_tags.length > 0 ) ? recipe.recipe_tags.map( tag => <span key={tag.tag_id}>{tag.tag_name}</span>) : <></> }\n            </div>            \n            <div>\n                <RecipeDetailsRating avgRating={recipe.rating} recipeId={recipe.id} />\n                <Button outline color=\"success\" onClick={handleAddToCookbook}>Add to cookbook</Button>\n            </div>\n            </Col>\n            <Col md=\"6\">\n            <Nav tabs>\n                <NavItem>\n                    <NavLink className={classnames({ active: activeTab === '1' })} onClick={() => { tabToggle('1'); }}>Instructions  </NavLink>\n                </NavItem>\n                <NavItem>\n                    <NavLink className={classnames({ active: activeTab === '2' })} onClick={() => { tabToggle('2'); }}>Ingredients  </NavLink>\n                </NavItem>\n                <NavItem>\n                    <NavLink className={classnames({ active: activeTab === '3' })} onClick={() => { tabToggle('3'); }}>Comments  </NavLink>\n                </NavItem>\n                {\n                    (recipe.user_username == user.username || user.is_admin ) ?\n                    <NavItem>\n                        <NavLink className={classnames({ active: activeTab === '4' })} onClick={() => { tabToggle('4'); }}>Content Owner  </NavLink>\n                    </NavItem> :\n                    <></>\n                }\n            </Nav>\n            <TabContent activeTab={activeTab}>\n                <TabPane tabId=\"1\">\n                    <div className=\"Detail-Instructions\">\n                        {recipe.instructions.map(instruction =>\n                        <RecipeDetailsInstruction key={instruction.instruction + \"instruction\" + id} id={instruction.id} order_num={instruction.order_num} instruction={instruction.instruction} /> \n                        )}\n                    </div>\n                </TabPane>\n                <TabPane tabId=\"2\">\n                    <div className=\"Detail-Ingredients\">\n                        {recipe.ingredients.map(ingredient => \n                        <RecipeDetailsIngredient key={ingredient.ingredient + \"ingredient\" + id} id={ingredient.id} order_num={ingredient.order_num} ingredient={ingredient.ingredient} />\n                    )}\n                    </div>\n                </TabPane>\n                <TabPane tabId=\"3\">\n                    <RecipeDetailsCommentsForm recipeId={id} />\n                    <RecipeDetailsComments comments={recipe.comments} user={user} />    \n                </TabPane>\n                { (recipe.user_username == user.username || user.is_admin )\n                    ?\n                    <TabPane tabId=\"4\">\n                        <div className=\"Content-Owner\">\n                        <Link to={`/edit/recipes/${id}`}><Button color=\"warning\">Edit Recipe</Button></Link>\n                        <Button onClick={handleDelete} color=\"danger\">Delete Recipe</Button>\n                        </div>\n                    </TabPane>\n                    :\n                    <></>\n                }\n            </TabContent>\n            </Col>\n            </Row>\n\n        </div>\n        :\n        <>...loading</>\n    )\n}\n\nexport default RecipeDetails;","/Users/brandonboatright/Desktop/CAPSTONE2/frontend/src/components/recipeDetails/RecipeDetailsInstruction.js",[],"/Users/brandonboatright/Desktop/CAPSTONE2/frontend/src/components/recipeDetails/RecipeDetailsIngredient.js",[],"/Users/brandonboatright/Desktop/CAPSTONE2/frontend/src/components/recipeDetails/RecipeDetailsRating.js",["228"],"import React , {useState, useEffect} from 'react';\nimport {useSelector, useDispatch} from 'react-redux';\nimport { FaStar } from 'react-icons/fa';\nimport {addRating, editRating} from '../../actionCreators/userRatings';\nimport './RecipeDetails.css';\n\n\nconst RecipeDetailsRating = ({recipeId, avgRating}) => {\n    const {isLoggedIn, token, user_ratings} = useSelector(store => store);\n    const dispatch = useDispatch();\n    const intScore = parseInt(avgRating);\n\n    const [hover, setHover] = useState(null);\n    const [ratingState, setRatingState] = useState(null);\n\n    useEffect(() => {\n        function getUsersRating (recipeId)  {\n            return user_ratings.filter(rating => recipeId === rating.recipe_id);\n        }\n        const users_old_rating = getUsersRating(recipeId);\n        console.log(\"users rating\", users_old_rating);\n        if(users_old_rating[0]){\n            setRatingState(users_old_rating[0].score);\n        }\n    }, []);\n\n\n    const handleSetUserRating = evt => {\n        evt.preventDefault();\n        if(!ratingState){\n            setRatingState(evt.target.value);\n            dispatch(addRating(recipeId, {token, \"score\": evt.target.value }));\n        }\n        else{\n            setRatingState(evt.target.value);\n            dispatch(editRating(recipeId, {token, \"score\": evt.target.value }));\n        }\n\n\n    }\n    return (  isLoggedIn ? \n        <div className=\"RecipeDetails-Rating\">\n        {[...Array(5)].map((star, i) => {\n            const ratingValue = i + 1;\n            return (\n                <label key={i}>\n                    <input\n                        type=\"radio\"\n                        name=\"rating\"\n                        value={ratingValue}\n                        onClick={handleSetUserRating}\n                    />\n                    <FaStar \n                    className=\"star\"\n                    color={ratingValue <= (hover || ratingState) ? \"#ffc107\" : \"#e4e5e9\"}\n                    size={50} \n                    onMouseEnter={()=> setHover(ratingValue)} \n                    onMouseLeave={() => setHover(null)}\n                    />\n                </label>\n            );\n        })\n        }\n    </div>\n    :\n    <div className=\"RecipeDetails-Rating\">\n    {[...Array(5)].map((star, i) => {\n        const ratingValue = i + 1;\n        return (\n            <label key={i}>\n                <FaStar \n                className=\"star\"\n                color={ratingValue <= intScore ? \"#ffc107\" : \"#e4e5e9\"}\n                size={50} \n                />\n            </label>\n        );\n    })\n    }\n</div>\n    )\n}\n\nexport default RecipeDetailsRating;","/Users/brandonboatright/Desktop/CAPSTONE2/frontend/src/actionCreators/comments.js",[],"/Users/brandonboatright/Desktop/CAPSTONE2/frontend/src/components/recipeDetails/RecipeDetailsComments.js",["229","230"],"import React from 'react';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {useHistory, useParams} from 'react-router-dom';\nimport {deleteCommentFromRecipe} from '../../actionCreators/comments';\nimport { RiDeleteBack2Fill } from \"react-icons/ri\";\n\n\nconst RecipeDetailsComments = ({comments, user}) => {\n    const { token } = useSelector(store => store);\n    const {id} = useParams();\n    const history = useHistory();\n    const dispatch = useDispatch();\n    const handleDelete = evt => {\n        let target = evt.target.parentElement.id;\n        dispatch(deleteCommentFromRecipe(target, { token: token}));\n        history.push(`/`);\n    }\n\n    return (\n        comments ?\n        comments.map(comment => (\n            <div key={comment.id} id={comment.id} className=\"Comment\"><span>Posted by: {comment.users_username}</span>\n             { (user.username == comment.users_username) ? \n            <span className=\"delete\" onClick={handleDelete}> <RiDeleteBack2Fill /></span>\n            :\n            <></>\n             }\n            <div>{comment.comment}</div>\n            <span>Posted on: {comment.created_on}</span>\n            </div>\n        ))\n        :\n        <>...</>\n    )\n    }\n\nexport default RecipeDetailsComments;\n","/Users/brandonboatright/Desktop/CAPSTONE2/frontend/src/components/recipeDetails/RecipeDetailsCommentsForm.js",["231","232","233"],"import React from 'react';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {useHistory} from 'react-router-dom';\nimport useFields from '../../customHooks/useFields';\nimport { addCommentToRecipe } from '../../actionCreators/comments';\nimport { Col, Row, Button, Form, FormGroup, Label, Input } from 'reactstrap';\n\nconst RecipeDetailsCommentsForm = ({recipeId}) => {\n        const dispatch = useDispatch();\n        const { token } = useSelector(store => store);\n        const history = useHistory();\n        const commentField = {\n            \"comment\" : \"\"\n        }\n        const [commentState, handleCommentChange] = useFields(commentField);\n    \n        const handleAddComment = evt => {\n            evt.preventDefault();\n            dispatch(addCommentToRecipe(recipeId,{ comment: commentState.comment, token : token}));\n            history.push(\"/\");\n        }\n        return (\n            <Form className=\"Comment-Form\">\n                <div>\n                <h5>Comment:</h5>\n                    <Label htmlFor=\"cmment\">Name: \n                    <Input type=\"textarea\" name=\"comment\" id=\"comment\" onChange={handleCommentChange} />\n                    </Label>\n                </div>\n                <Button onClick={handleAddComment} color=\"success\" type=\"submit\">submit</Button>\n            </Form>\n        )\n    }\n\n    export default RecipeDetailsCommentsForm;","/Users/brandonboatright/Desktop/CAPSTONE2/frontend/src/actionCreators/usersCookbook.js",[],"/Users/brandonboatright/Desktop/CAPSTONE2/frontend/src/components/UserActions/CookbookCard.js",["234","235","236","237"],"import React from 'react';\nimport { Link } from 'react-router-dom';\nimport {\n    Card, CardImg, CardText, CardBody,\n    CardTitle, CardSubtitle, Button, Badge\n  } from 'reactstrap';\n\nconst CookbookCard = ({username, id, recipe_name, image_url, created_on, user_username}) => {\n\n\n\nreturn (\n    <Card data-id={id} className=\"RecipeCard\">\n        <Link to={`/cookbook/${id}`}>\n            <CardImg top width=\"100%\" src={image_url}/>\n        </Link>\n        <CardTitle tag=\"h5\" className=\"CookbookCardName\">{recipe_name}</CardTitle>\n\n        <CardSubtitle tag=\"h6\" className=\"CookbookCardCreatedOn\">{created_on}</CardSubtitle>\n        <CardSubtitle tag=\"h6\" className=\"CookbookCardUsername\">{user_username}</CardSubtitle>\n    </Card>\n)\n\n}\n\nexport default CookbookCard;","/Users/brandonboatright/Desktop/CAPSTONE2/frontend/src/components/UserActions/EditRecipe.js",["238","239","240"],"import React, {useState, useEffect} from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {useHistory, useParams} from 'react-router-dom';\nimport useFields from '../../customHooks/useFields';\nimport {editRecipe} from \"../../actionCreators/recipeDetails\";\nimport { transformIngredients, transformInstructions} from \"../../helpers/recipeFormHelpers\";\nimport { getRecipe, dismountRecipe } from '../../actionCreators/recipeDetails'\nimport { LOAD_RECIPE_TAGS } from '../../actions/actionTypes';\nimport { Col, Row, Button, Form, FormGroup, Label, Input } from 'reactstrap';\nimport { RiDeleteBack2Fill } from \"react-icons/ri\";\n\n\nconst EditRecipe = () => {\n    const { id } = useParams();\n    const dispatch = useDispatch();\n    const history = useHistory();\n    const {  tags, token, recipe } = useSelector(store => store);\n\n    const recipeFields = { \n        \"name\" : \"\",\n        \"image_url\" : \"\"\n    }\n    const textBoxField = {\n        \"info\" : \"\"\n    }\n    const[ textboxState, setTextBoxState ] = useState(textBoxField);\n    const handleChangeTextBox = event => {\n        setTextBoxState(textboxState => ({\n            ...textboxState,\n            [event.target.name] : event.target.value\n        }));\n    }\n    const[ recipeData, setRecipeData ] = useState(recipeFields);\n\n    const handleRecipeChange = event => {\n        setRecipeData(recipeData => ({\n            ...recipeData,\n            [event.target.name] : event.target.value\n        }));\n    }\n\n    const [ ingredientsState, setIngredients ] = useState([]);\n    const [ instructionsState, setInstructions ] = useState([]);\n    const [ recipeTags, setRecipeTags ] = useState([]);\n\n    useEffect(()=>{\n        dispatch(getRecipe(id));\n        return dismountRecipe();\n    }, []);\n\n    useEffect(() =>{\n        if(recipe.instructions || recipe.ingredients){\n            let ingredientsArray = []\n            for(let i = 0; i < recipe.ingredients.length; ++i){\n                ingredientsArray.push(recipe.ingredients[i].ingredient);\n            }\n            setIngredients([...ingredientsArray]);\n\n            let instructionsArray = []; \n            for(let o = 0; o < recipe.instructions.length; ++o) {\n                instructionsArray.push(recipe.instructions[o].instruction);\n            }\n            setInstructions([...instructionsArray]);\n            console.log(recipe.recipe_name, recipe.image_url);\n            setRecipeData({\n                \"name\": recipe.recipe_name,\n                \"image_url\": recipe.image_url\n\n            });\n        }\n\n    }, [recipe]);\n\n    const handleCheckBoxChange = evt => {\n        console.log(evt.target.checked);\n        if(evt.target.checked){\n            setRecipeTags(recipeTags => ([\n                ...recipeTags,\n                evt.target.value\n            ]));\n        } else {\n            setRecipeTags(recipeTags.filter( recipe => recipe !== evt.target.value ));\n        }\n    }\n\n    const handleEditRecipe = evt => {\n        evt.preventDefault();\n        let instructions = transformInstructions(instructionsState);\n        let ingredients = transformIngredients(ingredientsState);\n        let reqRecipe = {\n            token,\n            \"recipe_name\" : recipeData.name,\n            \"image_url\" : recipeData.image_url,\n            \"ingredients\" : ingredients,\n            \"instructions\" : instructions,\n            recipeTags\n        }\n        dispatch(editRecipe(recipe.id, reqRecipe));\n        history.push(\"/\");\n    }\n\n\n    const handleAddIngredient = evt => {\n        evt.preventDefault();\n        setIngredients([...ingredientsState, textboxState.info]);\n        setTextBoxState(textBoxField);\n        document.getElementById(\"info\").value = \"\";\n    }\n\n    const removeIngredient = evt => {\n        let filteredArray = ingredientsState.filter(item => item !== evt.target.parentElement.id);\n        setIngredients(filteredArray);\n    }\n\n    const handleAddInstruction = evt => {\n        evt.preventDefault();\n        setInstructions([...instructionsState, textboxState.info]);\n        setTextBoxState(textBoxField);\n        document.getElementById(\"info\").value = \"\";\n    }\n\n    const removeInstruction = evt => {\n        console.log(evt.target);\n        let filteredArray = instructionsState.filter(item => item !== evt.target.parentElement.id);\n        setInstructions(filteredArray);\n    }\n    // const checkForTag = (tagId) => {\n    //     let found = recipe.recipe_tags.find(tag => tag.tag_id == tagId);\n    //     if(found == undefined){\n    //         console.log(\"not found in recipes tags\");\n    //         return false;\n    //     }\n    //     setRecipeTags(recipeTags => ([\n    //         ...recipeTags,\n    //         tagId\n    //     ]));\n\n    //     console.log(\"checked for tag\", tagId);\n    //     return true;\n    // }\n\n    return (\n        recipe.instructions || recipe.ingredients ?\n            <Form className=\"PostForm\">\n            <Row form>\n                <Col md={6}>\n            <FormGroup>\n                <Label htmlFor=\"name\">Name </Label>\n                <Input type=\"text\" name=\"name\" id=\"name\" placeholder=\"Recipe Name\" onChange={handleRecipeChange} value={recipe.recipe_name} />\n            </FormGroup>\n            <FormGroup>\n                <Label htmlFor=\"imageURL\">Image URL </Label>\n                <Input type=\"text\" name=\"image_url\" id=\"image_url\" placeholder=\"URL to a picture of your recipe\" onChange={handleRecipeChange} value={recipe.image_url} />\n            </FormGroup>\n            <FormGroup>\n                {tags.map( tag => (\n                    <Label htmlFor={tag.id} check> \n                    <Input onChange={handleCheckBoxChange} type=\"checkbox\" key={tag.id} id={tag.id} name={tag.id} value={tag.id} check/>{' '}\n                    {tag.tag_name}\n                    </Label>\n                ))}\n            </FormGroup>\n            </Col>\n            <Col md={6}>\n                <FormGroup>\n                    <Label htmlFor=\"info\">Add Ingredient/Instruction:\n                    <Input type=\"textarea\"  name=\"info\" id=\"info\" onChange={handleChangeTextBox}/></Label>\n                    <div>\n                        <Button outline color=\"success\" type=\"button\" onClick={handleAddIngredient}>Add Ingredient</Button>\n                        <Button outline color=\"success\" type=\"button\" onClick={handleAddInstruction}>Add Instruction</Button>\n                    </div>\n                </FormGroup>\n            </Col>\n            </Row>\n            <Row form>\n                <Col md={6}>\n            {\n                ingredientsState.length > 0 \n                ?\n                <div>\n                <h4>Ingredients</h4>\n                <ol>\n                {ingredientsState.map(ingredient => <li id={ingredient} key={ingredient} >{ingredient} <span onClick={removeIngredient}><RiDeleteBack2Fill color=\"#dc3545\" /></span></li>)}\n                </ol>\n                </div>\n\n                :\n                <></> \n            }\n            </Col>\n            <Col md={6}>\n            {\n                instructionsState.length > 0\n                ?\n                <div>\n                <h4>Instructions</h4>\n                <ol>\n                {instructionsState.map(instruction => <li id={instruction} key={instruction}>{instruction} <span onClick={removeInstruction}><RiDeleteBack2Fill color=\"#dc3545\" /></span></li>)}\n                </ol>\n                </div>\n                :\n                <></>\n            }\n            </Col>\n            <Button color=\"primary\" onClick={handleEditRecipe}>Submit Recipe</Button>\n\n            </Row>\n        </Form>\n            \n\n        :\n        <>Loading...</>\n    )\n}\n\nexport default EditRecipe;\n\n",{"ruleId":"241","replacedBy":"242"},{"ruleId":"243","replacedBy":"244"},{"ruleId":"245","severity":1,"message":"246","line":2,"column":10,"nodeType":"247","messageId":"248","endLine":2,"endColumn":21},{"ruleId":"249","severity":1,"message":"250","line":35,"column":6,"nodeType":"251","endLine":35,"endColumn":8,"suggestions":"252"},{"ruleId":"245","severity":1,"message":"253","line":7,"column":10,"nodeType":"247","messageId":"248","endLine":7,"endColumn":13},{"ruleId":"245","severity":1,"message":"254","line":7,"column":15,"nodeType":"247","messageId":"248","endLine":7,"endColumn":18},{"ruleId":"245","severity":1,"message":"255","line":7,"column":45,"nodeType":"247","messageId":"248","endLine":7,"endColumn":50},{"ruleId":"245","severity":1,"message":"256","line":1,"column":16,"nodeType":"247","messageId":"248","endLine":1,"endColumn":25},{"ruleId":"245","severity":1,"message":"257","line":6,"column":10,"nodeType":"247","messageId":"248","endLine":6,"endColumn":18},{"ruleId":"245","severity":1,"message":"258","line":6,"column":28,"nodeType":"247","messageId":"248","endLine":6,"endColumn":41},{"ruleId":"245","severity":1,"message":"259","line":6,"column":43,"nodeType":"247","messageId":"248","endLine":6,"endColumn":54},{"ruleId":"245","severity":1,"message":"260","line":6,"column":55,"nodeType":"247","messageId":"248","endLine":6,"endColumn":58},{"ruleId":"245","severity":1,"message":"261","line":6,"column":59,"nodeType":"247","messageId":"248","endLine":6,"endColumn":66},{"ruleId":"245","severity":1,"message":"262","line":6,"column":68,"nodeType":"247","messageId":"248","endLine":6,"endColumn":75},{"ruleId":"245","severity":1,"message":"263","line":7,"column":6,"nodeType":"247","messageId":"248","endLine":7,"endColumn":26},{"ruleId":"245","severity":1,"message":"264","line":7,"column":72,"nodeType":"247","messageId":"248","endLine":7,"endColumn":82},{"ruleId":"245","severity":1,"message":"265","line":7,"column":84,"nodeType":"247","messageId":"248","endLine":7,"endColumn":90},{"ruleId":"245","severity":1,"message":"266","line":8,"column":10,"nodeType":"247","messageId":"248","endLine":8,"endColumn":19},{"ruleId":"245","severity":1,"message":"267","line":1,"column":16,"nodeType":"247","messageId":"248","endLine":1,"endColumn":24},{"ruleId":"245","severity":1,"message":"268","line":9,"column":22,"nodeType":"247","messageId":"248","endLine":9,"endColumn":26},{"ruleId":"269","severity":1,"message":"270","line":10,"column":71,"nodeType":"271","messageId":"272","endLine":10,"endColumn":73},{"ruleId":"249","severity":1,"message":"273","line":14,"column":8,"nodeType":"251","endLine":14,"endColumn":10,"suggestions":"274"},{"ruleId":"245","severity":1,"message":"275","line":9,"column":13,"nodeType":"247","messageId":"248","endLine":9,"endColumn":18},{"ruleId":"249","severity":1,"message":"276","line":14,"column":8,"nodeType":"251","endLine":14,"endColumn":10,"suggestions":"277"},{"ruleId":"245","severity":1,"message":"253","line":6,"column":10,"nodeType":"247","messageId":"248","endLine":6,"endColumn":13},{"ruleId":"245","severity":1,"message":"254","line":6,"column":15,"nodeType":"247","messageId":"248","endLine":6,"endColumn":18},{"ruleId":"245","severity":1,"message":"275","line":11,"column":13,"nodeType":"247","messageId":"248","endLine":11,"endColumn":18},{"ruleId":"245","severity":1,"message":"278","line":11,"column":20,"nodeType":"247","messageId":"248","endLine":11,"endColumn":28},{"ruleId":"245","severity":1,"message":"279","line":11,"column":30,"nodeType":"247","messageId":"248","endLine":11,"endColumn":35},{"ruleId":"245","severity":1,"message":"253","line":6,"column":10,"nodeType":"247","messageId":"248","endLine":6,"endColumn":13},{"ruleId":"245","severity":1,"message":"254","line":6,"column":15,"nodeType":"247","messageId":"248","endLine":6,"endColumn":18},{"ruleId":"245","severity":1,"message":"275","line":11,"column":13,"nodeType":"247","messageId":"248","endLine":11,"endColumn":18},{"ruleId":"245","severity":1,"message":"278","line":11,"column":20,"nodeType":"247","messageId":"248","endLine":11,"endColumn":28},{"ruleId":"245","severity":1,"message":"279","line":11,"column":30,"nodeType":"247","messageId":"248","endLine":11,"endColumn":35},{"ruleId":"245","severity":1,"message":"280","line":8,"column":54,"nodeType":"247","messageId":"248","endLine":8,"endColumn":58},{"ruleId":"245","severity":1,"message":"281","line":8,"column":68,"nodeType":"247","messageId":"248","endLine":8,"endColumn":77},{"ruleId":"245","severity":1,"message":"282","line":8,"column":79,"nodeType":"247","messageId":"248","endLine":8,"endColumn":87},{"ruleId":"245","severity":1,"message":"283","line":8,"column":99,"nodeType":"247","messageId":"248","endLine":8,"endColumn":103},{"ruleId":"245","severity":1,"message":"284","line":8,"column":105,"nodeType":"247","messageId":"248","endLine":8,"endColumn":114},{"ruleId":"245","severity":1,"message":"255","line":8,"column":116,"nodeType":"247","messageId":"248","endLine":8,"endColumn":121},{"ruleId":"245","severity":1,"message":"285","line":8,"column":123,"nodeType":"247","messageId":"248","endLine":8,"endColumn":128},{"ruleId":"245","severity":1,"message":"286","line":8,"column":130,"nodeType":"247","messageId":"248","endLine":8,"endColumn":139},{"ruleId":"245","severity":1,"message":"287","line":16,"column":20,"nodeType":"247","messageId":"248","endLine":16,"endColumn":30},{"ruleId":"249","severity":1,"message":"288","line":26,"column":8,"nodeType":"251","endLine":26,"endColumn":10,"suggestions":"289"},{"ruleId":"290","severity":1,"message":"291","line":42,"column":17,"nodeType":"292","endLine":42,"endColumn":69},{"ruleId":"245","severity":1,"message":"256","line":1,"column":26,"nodeType":"247","messageId":"248","endLine":1,"endColumn":35},{"ruleId":"245","severity":1,"message":"293","line":1,"column":8,"nodeType":"247","messageId":"248","endLine":1,"endColumn":13},{"ruleId":"241","replacedBy":"294"},{"ruleId":"243","replacedBy":"295"},{"ruleId":"245","severity":1,"message":"282","line":4,"column":20,"nodeType":"247","messageId":"248","endLine":4,"endColumn":28},{"ruleId":"245","severity":1,"message":"265","line":5,"column":30,"nodeType":"247","messageId":"248","endLine":5,"endColumn":36},{"ruleId":"245","severity":1,"message":"296","line":11,"column":13,"nodeType":"247","messageId":"248","endLine":11,"endColumn":17},{"ruleId":"245","severity":1,"message":"280","line":13,"column":54,"nodeType":"247","messageId":"248","endLine":13,"endColumn":58},{"ruleId":"245","severity":1,"message":"281","line":13,"column":68,"nodeType":"247","messageId":"248","endLine":13,"endColumn":77},{"ruleId":"245","severity":1,"message":"282","line":13,"column":79,"nodeType":"247","messageId":"248","endLine":13,"endColumn":87},{"ruleId":"245","severity":1,"message":"283","line":13,"column":99,"nodeType":"247","messageId":"248","endLine":13,"endColumn":103},{"ruleId":"245","severity":1,"message":"284","line":13,"column":105,"nodeType":"247","messageId":"248","endLine":13,"endColumn":114},{"ruleId":"245","severity":1,"message":"255","line":13,"column":116,"nodeType":"247","messageId":"248","endLine":13,"endColumn":121},{"ruleId":"245","severity":1,"message":"285","line":13,"column":123,"nodeType":"247","messageId":"248","endLine":13,"endColumn":128},{"ruleId":"245","severity":1,"message":"286","line":13,"column":130,"nodeType":"247","messageId":"248","endLine":13,"endColumn":139},{"ruleId":"245","severity":1,"message":"297","line":34,"column":8,"nodeType":"247","messageId":"248","endLine":34,"endColumn":18},{"ruleId":"245","severity":1,"message":"298","line":34,"column":20,"nodeType":"247","messageId":"248","endLine":34,"endColumn":33},{"ruleId":"249","severity":1,"message":"299","line":43,"column":4,"nodeType":"251","endLine":43,"endColumn":6,"suggestions":"300"},{"ruleId":"290","severity":1,"message":"291","line":61,"column":17,"nodeType":"292","endLine":61,"endColumn":69},{"ruleId":"269","severity":1,"message":"270","line":82,"column":43,"nodeType":"271","messageId":"272","endLine":82,"endColumn":45},{"ruleId":"269","severity":1,"message":"270","line":108,"column":41,"nodeType":"271","messageId":"272","endLine":108,"endColumn":43},{"ruleId":"249","severity":1,"message":"301","line":25,"column":8,"nodeType":"251","endLine":25,"endColumn":10,"suggestions":"302"},{"ruleId":"245","severity":1,"message":"303","line":10,"column":12,"nodeType":"247","messageId":"248","endLine":10,"endColumn":14},{"ruleId":"269","severity":1,"message":"270","line":23,"column":31,"nodeType":"271","messageId":"272","endLine":23,"endColumn":33},{"ruleId":"245","severity":1,"message":"253","line":6,"column":10,"nodeType":"247","messageId":"248","endLine":6,"endColumn":13},{"ruleId":"245","severity":1,"message":"254","line":6,"column":15,"nodeType":"247","messageId":"248","endLine":6,"endColumn":18},{"ruleId":"245","severity":1,"message":"284","line":6,"column":34,"nodeType":"247","messageId":"248","endLine":6,"endColumn":43},{"ruleId":"245","severity":1,"message":"282","line":4,"column":20,"nodeType":"247","messageId":"248","endLine":4,"endColumn":28},{"ruleId":"245","severity":1,"message":"304","line":4,"column":30,"nodeType":"247","messageId":"248","endLine":4,"endColumn":38},{"ruleId":"245","severity":1,"message":"265","line":5,"column":30,"nodeType":"247","messageId":"248","endLine":5,"endColumn":36},{"ruleId":"245","severity":1,"message":"305","line":5,"column":38,"nodeType":"247","messageId":"248","endLine":5,"endColumn":43},{"ruleId":"245","severity":1,"message":"306","line":4,"column":8,"nodeType":"247","messageId":"248","endLine":4,"endColumn":17},{"ruleId":"245","severity":1,"message":"307","line":8,"column":10,"nodeType":"247","messageId":"248","endLine":8,"endColumn":26},{"ruleId":"249","severity":1,"message":"288","line":49,"column":8,"nodeType":"251","endLine":49,"endColumn":10,"suggestions":"308"},"no-native-reassign",["309"],"no-negated-in-lhs",["310"],"no-unused-vars","'useSelector' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch', 'token', and 'username'. Either include them or remove the dependency array.","ArrayExpression",["311"],"'Col' is defined but never used.","'Row' is defined but never used.","'Label' is defined but never used.","'useEffect' is defined but never used.","'Collapse' is defined but never used.","'NavbarToggler' is defined but never used.","'NavbarBrand' is defined but never used.","'Nav' is defined but never used.","'NavItem' is defined but never used.","'NavLink' is defined but never used.","'UncontrolledDropdown' is defined but never used.","'NavbarText' is defined but never used.","'Button' is defined but never used.","'CgProfile' is defined but never used.","'useState' is defined but never used.","'tags' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["312"],"'token' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'username'. Either include them or remove the dependency array.",["313"],"'username' is assigned a value but never used.","'admin' is assigned a value but never used.","'Card' is defined but never used.","'CardTitle' is defined but never used.","'CardText' is defined but never used.","'Form' is defined but never used.","'FormGroup' is defined but never used.","'Input' is defined but never used.","'Container' is defined but never used.","'isLoggedIn' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'id'. Either include them or remove the dependency array.",["314"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'React' is defined but never used.",["309"],["310"],"'user' is assigned a value but never used.","'recipeTags' is assigned a value but never used.","'setRecipeTags' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatch', 'id', 'isLoggedIn', and 'user.username'. Either include them or remove the dependency array.",["315"],"React Hook useEffect has missing dependencies: 'recipeId' and 'user_ratings'. Either include them or remove the dependency array.",["316"],"'id' is assigned a value but never used.","'CardBody' is defined but never used.","'Badge' is defined but never used.","'useFields' is defined but never used.","'LOAD_RECIPE_TAGS' is defined but never used.",["317"],"no-global-assign","no-unsafe-negation",{"desc":"318","fix":"319"},{"desc":"320","fix":"321"},{"desc":"322","fix":"323"},{"desc":"324","fix":"325"},{"desc":"326","fix":"327"},{"desc":"328","fix":"329"},{"desc":"324","fix":"330"},"Update the dependencies array to be: [dispatch, token, username]",{"range":"331","text":"332"},"Update the dependencies array to be: [dispatch]",{"range":"333","text":"334"},"Update the dependencies array to be: [dispatch, username]",{"range":"335","text":"336"},"Update the dependencies array to be: [dispatch, id]",{"range":"337","text":"338"},"Update the dependencies array to be: [dispatch, id, isLoggedIn, user.username]",{"range":"339","text":"340"},"Update the dependencies array to be: [recipeId, user_ratings]",{"range":"341","text":"342"},{"range":"343","text":"338"},[1089,1091],"[dispatch, token, username]",[524,526],"[dispatch]",[508,510],"[dispatch, username]",[1162,1164],"[dispatch, id]",[1646,1648],"[dispatch, id, isLoggedIn, user.username]",[944,946],"[recipeId, user_ratings]",[1755,1757]]